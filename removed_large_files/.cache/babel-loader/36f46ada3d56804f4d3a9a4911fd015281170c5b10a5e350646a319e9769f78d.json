{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Desktop/library-app/03-frontend/react-library/src/layouts/MessagesPage/components/Messages.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { Pagination } from '../../Utils/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Messages = () => {\n  _s();\n  const {\n    authState\n  } = useOktaAuth();\n  const [isLoadingMessages, setIsLoadingMessages] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  // Messages\n  const [messages, setMessages] = useState([]);\n\n  // Pagination\n  const [messagesPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    const fetchUserMessages = async () => {\n      if (authState && authState !== null && authState !== void 0 && authState.isAuthenticated) {\n        var _authState$accessToke, _authState$accessToke2;\n        const url = `http://localhost:8080/api/messages/search/findByUserEmail/?userEmail=${authState === null || authState === void 0 ? void 0 : (_authState$accessToke = authState.accessToken) === null || _authState$accessToke === void 0 ? void 0 : _authState$accessToke.claims.sub}&page=${currentPage - 1}&size=${messagesPerPage}`;\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${authState === null || authState === void 0 ? void 0 : (_authState$accessToke2 = authState.accessToken) === null || _authState$accessToke2 === void 0 ? void 0 : _authState$accessToke2.accessToken}`,\n            'Content-Type': 'application/json'\n          }\n        };\n        const messagesResponse = await fetch(url, requestOptions);\n        if (!messagesResponse.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const messagesResponseJson = await messagesResponse.json();\n        setMessages(messagesResponseJson._embedded.messages);\n        setTotalPages(messagesResponseJson.page.totalPages);\n      }\n      setIsLoadingMessages(false);\n    };\n    fetchUserMessages().catch(error => {\n      setIsLoadingMessages(false);\n      setHttpError(error.messages);\n    });\n    window.scrollTo(0, 0);\n  }, [authState, currentPage]);\n  if (isLoadingMessages) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2\",\n    children: [messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Current Q/A: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mt-2 shadow p-3 bg-body rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Case #\", message.id, \": \", message.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: message.userEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Response: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), message.response && message.adminEmail ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [message.adminEmail, \" (admin)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Pending response from administration. Please be patient.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"All questions you submit will be shown here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"BsxjON0zFpxYn1DXy6SUJkaovTA=\", false, function () {\n  return [useOktaAuth];\n});\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useEffect","useState","useOktaAuth","SpinnerLoading","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","authState","isLoadingMessages","setIsLoadingMessages","httpError","setHttpError","messages","setMessages","messagesPerPage","currentPage","setCurrentPage","totalPages","setTotalPages","fetchUserMessages","isAuthenticated","_authState$accessToke","_authState$accessToke2","url","accessToken","claims","sub","requestOptions","method","headers","Authorization","messagesResponse","fetch","ok","Error","messagesResponseJson","json","_embedded","page","catch","error","window","scrollTo","fileName","_jsxFileName","lineNumber","columnNumber","className","children","paginate","pageNumber","length","map","message","id","title","userEmail","question","response","adminEmail","_c","$RefreshReg$"],"sources":["/Users/alice/Desktop/library-app/03-frontend/react-library/src/layouts/MessagesPage/components/Messages.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport MessageModel from '../../../models/MessageModel';\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { Pagination } from '../../Utils/Pagination';\n\nexport const Messages = () => {\n\n    const { authState } = useOktaAuth();\n    const [isLoadingMessages, setIsLoadingMessages] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n\n    // Messages\n    const [messages, setMessages] = useState<MessageModel[]>([]);\n\n    // Pagination\n    const [messagesPerPage] = useState(5);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(() => {\n        const fetchUserMessages = async () => {\n            if (authState && authState?.isAuthenticated) {\n                const url = `http://localhost:8080/api/messages/search/findByUserEmail/?userEmail=${authState?.accessToken?.claims.sub}&page=${currentPage - 1}&size=${messagesPerPage}`;\n                const requestOptions = {\n                    method: 'GET',\n                    headers: {\n                        Authorization: `Bearer ${authState?.accessToken?.accessToken}`,\n                        'Content-Type': 'application/json'\n                    }\n                };\n                const messagesResponse = await fetch(url, requestOptions);\n                if (!messagesResponse.ok) {\n                    throw new Error('Something went wrong!');\n                }\n                const messagesResponseJson = await messagesResponse.json();\n                setMessages(messagesResponseJson._embedded.messages);\n                setTotalPages(messagesResponseJson.page.totalPages);\n            }\n            setIsLoadingMessages(false);\n        } \n        fetchUserMessages().catch((error: any) => {\n            setIsLoadingMessages(false);\n            setHttpError(error.messages);\n        })\n        window.scrollTo(0, 0);\n    }, [authState, currentPage]);\n\n    if (isLoadingMessages) {\n        return (\n            <SpinnerLoading/>\n        );\n    }\n\n    if (httpError) {\n        return (\n            <div className='container m-5'>\n                <p>{httpError}</p>\n            </div>\n        );\n    }\n\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    return (\n        <div className='mt-2'>\n            {messages.length > 0 ? \n                <>\n                    <h5>Current Q/A: </h5>\n                    {messages.map(message => (\n                        <div key={message.id}>\n                            <div className='card mt-2 shadow p-3 bg-body rounded'>\n                                <h5>Case #{message.id}: {message.title}</h5>\n                                <h6>{message.userEmail}</h6>\n                                <p>{message.question}</p>\n                                <hr/>\n                                <div>\n                                    <h5>Response: </h5>\n                                    {message.response && message.adminEmail ? \n                                        <>\n                                            <h6>{message.adminEmail} (admin)</h6>\n                                            <p>{message.response}</p>\n                                        </>\n                                        :\n                                        <p><i>Pending response from administration. Please be patient.</i></p>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </>\n                :\n                <h5>All questions you submit will be shown here</h5>\n            }\n            {totalPages > 1 && <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate}/>}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}